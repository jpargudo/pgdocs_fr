<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-createpublication">
 <indexterm zone="sql-createpublication">
  <primary>CREATE PUBLICATION</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE PUBLICATION</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Ordres du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE PUBLICATION</refname>
  <refpurpose>définir une nouvelle publication</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>
CREATE PUBLICATION <replaceable class="parameter">nom</replaceable>
    [ FOR ALL TABLES
      | FOR <replaceable class="parameter">objet_publication</replaceable> [, ... ] ]
    [ WITH ( <replaceable class="parameter">paramètre_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) ]

<phrase>où <replaceable class="parameter">objet_publication</replaceable> est parmi&nbsp;;:</phrase>

    TABLE [ ONLY ] <replaceable class="parameter">nom_table</replaceable> [ * ] [ ( <replaceable class="parameter">nom_colonne</replaceable> [, ... ] ) ] [ WHERE ( <replaceable class="parameter">expression</replaceable> ) ] [, ... ]
    ALL TABLES IN SCHEMA { <replaceable class="parameter">nom_schéma</replaceable> | CURRENT_SCHEMA } [, ... ]
  </synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE PUBLICATION</command> ajoute une nouvelle publication dans
   la base courante.  Le nom de la publication doit être différent du nom de
   toutes les autres publications existante au sein de la base courante.
  </para>

  <para>
   Une publication est essentiellement un groupe de table dont les changement
   de données sont destinés à être répliqué grâce à la réplication logique.
   Voir <xref linkend="logical-replication-publication"/> pour les détails de
   comment les publications participent à la mise en place de la réplication
   logique.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de la nouvelle publication.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR TABLE</literal></term>
    <listitem>
     <para>
      Spécifie une liste de tables à ajouter à la publication.  Si
      <literal>ONLY</literal> est spécifié avant le nom de la table, seul
      cette table est ajoutée à la publication.  Si <literal>ONLY</literal>
      n'est pas spécifié, la table ainsi que toutes les tables descendantes
      (s'il y en a) est ajoutées.  De manière facultative,
      <literal>*</literal> peut être spécifié après le nom de la table pour
      indiquer explicitement que les tables descendantes doivent être
      incluses. Néanmoins, ceci ne s'applique pas à une table partitionnée.
      Les partitions d'une table sont toujours considérées implicitement comme
      faisant partie de la publication, donc elles ne sont jamais ajoutées
      explicitement à la publication.
     </para>

     <para>
      Si la clause <literal>WHERE</literal> optionnelle est indiquée, elle
      définit une expression de <firstterm>filtre de lignes</firstterm>. Les
      lignes pour lesquelles l'<replaceable
      class="parameter">expression</replaceable> vaut false ou NULL ne seront
      pas publiées. Notez que les parenthèses sont requises autour de
      l'expression. Cette clause n'a pas d'effet sur les commandes
      <literal>TRUNCATE</literal>.
     </para>

     <para>
      Quand une liste de colonnes est indiquée, seules les colonnes nommées
      sont répliquées. Si aucune liste de colonnes n'est indiquée, toutes les
      colonnes de la table sont répliquées au travers de cette publication, en
      incluant toutes les colonnes ajoutées après coup. Cela n'a pas d'effet
      sur <literal>TRUNCATE</literal>.
     </para>

     <para>
      Seules les tables persistantes et les tables partitionnées peuvent faire
      partie d'une publication. Les tables temporaires, tables non
      journalisées, tables distantes, vues matérialisées et vues standard ne
      peuvent pas faire partie d'une publication. Pour répliquer une table
      partitionnée, il faut ajouter chaque partition individuellement à la
      publication.
     </para>

     <para>
      Quand une table partitionnée est ajoutée à une publication, toutes les
      partitions existantes et futures seront considérées implicitement comme
      faisant partie de la publication. Donc, même les opérations réalisées
      directement sur une partition seront publiées via les publications dont
      fait partie la table partitionnée.
     </para>

     <para>
      Indiquer une table qui fait partie d'un schéma indiqué par
      <literal>FOR ALL TABLES IN SCHEMA</literal> n'est pas supporté.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR ALL TABLES</literal></term>
    <listitem>
     <para>
      Marque la publication comme publication qui réplique les changement pour
      toutes les tables de la base, en incluant les tables qui seront crées
      dans le futur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FOR ALL TABLES IN SCHEMA</literal></term>
    <listitem>
     <para>
      Marque la publication comme répliquant les changements de toutes les
      tables de la liste de schémas indiquée, incluant les tables créées
      plus tard.
     </para>

     <para>
      Indiquer un schéma ainsi qu'une table appartenant au schéma spécifié en
      utilisant <literal>FOR TABLE</literal> n'st pas supporté.
     </para>

     <para>
      Seules les tables persistantes et les tables partitionnées présentes dans
      le schéma seront inclus dans la publication. Les tables temporaires, les
      tables non journalisées, les tables distantes, les vues matérialisées et
      les vues standards du schéma ne feront pas partie de la publication.
     </para>

     <para>
      Quand une table partitionnée est publiée via la publication au niveau
      schéma, toutes les partitions existantes et futures sont implicitement
      considérées comme faisant partie de la publication, qu'elles soient dans
      le schéma de publication ou pas. Donc, même les opérations réalisées
      directement sur une partition sont aussi publiées via les publications
      auxquelles ont fait partie ses ancêtres.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH ( <replaceable class="parameter">parametre_publication</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] )</literal></term>
    <listitem>
     <para>
      Cette clause spécifique les paramètres facultatifs d'une publication.
      Les paramètres suivants sont acceptés&nbsp;:

      <variablelist>
       <varlistentry>
        <term><literal>publish</literal> (<type>string</type>)</term>
        <listitem>
         <para>
          Ce paramètre détermine quelles opération DML seront publiées par la
          nouvelle publication aux souscripteurs.  Le contenu est une liste
          d'opération séparé par des virgules.  Les opérations autorisées sont
          <literal>insert</literal>, <literal>update</literal>,
          <literal>delete</literal> et <literal>truncate</literal>.  Par
          défaut toutes les actions sont publiées, et donc la valeur par
          défaut pour cette option est <literal>'insert, update,
           delete, truncate'</literal>.
         </para>
         <para>
          Ce paramètre affecte seulement les opérations DML. En particulier, la
          synchronisation initiale des données (voir <xref
          linkend="logical-replication-snapshot"/>) pour la réplication logique
          ne prend pas en compte ce paramètre lors de la copie de données
          existantes de la table.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>publish_via_partition_root</literal> (<type>boolean</type>)</term>
        <listitem>
         <para>
          Ce paramètre détermine si les modifications dans une table
          partitionnée (ou dans ses partitions) contenue dans la publication
          seront publiées en utilisant l'identité et le schéma de la table
          partitionnée plutôt que celle des partitions individuelles
          réellement modifiées&nbsp;; ce dernier est le comportement par
          défaut. Activer ce paramètre permet à des changements d'être
          répliqués dans une table non partitionnée ou dans une table
          partitionnée différemment.
         </para>

         <para>
          Ce paramètre affecté aussi comment les filtres de lignes et les listes
          de colonnes sont choisis pour les partitions&nbsp;; voir ci-dessous
          pour les détails.
         </para>

         <para>
          Si ceci est activé, les opérations <literal>TRUNCATE</literal>
          réalisées directement sur les partitions ne sont pas répliquées.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>

     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Si les clauses <literal>FOR TABLE</literal>, <literal>FOR ALL
   TABLES</literal> ou <literal>FOR ALL TABLES IN SCHEMA</literal> ne sont pas
   passées, alors la publication commence avec un ensemble vide de tables. C'est
   utile si les tables ou schémas sont à ajouter ultérieurement.
  </para>

  <para>
   La création d'une publication ne démarre pas la réplication. Cela définit
   uniquement un regroupement ainsi qu'un filtre logique pour les futurs
   souscripteurs.
  </para>

  <para>
   Pour créer une publication, l'utilisateur lançant la commande doit avec le
   droit <literal>CREATE</literal> pour la base de données courante.
   (Bien entendu, les superutilisateurs coutournent cette vérification.)
  </para>

  <para>
   Pour ajouter une table à une publication, l'utilisateur lançant la commande
   doit avoir les droits de propriétaire de la table. Les clauses <command>FOR
   ALL TABLES</command> et <command>FOR ALL TABLES IN SCHEMA</command>
   nécessitent d'être superutilisateur pour pouvoir les utiliser.
  </para>

  <para>
   Les tables ajoutées à une publication qui publie les opérations
   <command>UPDATE</command> et/ou <command>DELETE</command> doivent avoir
   <literal>REPLICA IDENTITY</literal> défini. Autrement ces opérations seront
   interdites sur ces tables.
  </para>

  <para>
   Toute liste de colonnes doit inclure les colonnes <literal>REPLICA
   IDENTITY</literal> dans l'ordre pour la publication d'opérations
   <command>UPDATE</command> ou <command>DELETE</command>. Il n'y a pas des
   restrictions de listes de colonnes si la publication publie seulement des
   opérations <command>INSERT</command>.
  </para>

  <para>
   Une expression de filtre par lignes (par exemple la clause
   <literal>WHERE</literal>) doit uniquement contenir les colonnes couvertes par
   <literal>REPLICA IDENTITY</literal>, pour que les opérations
   <command>UPDATE</command> et <command>DELETE</command> soient publiées.  Pour
   la publication des opérations <command>INSERT</command>, toute colonne peut
   être utilisée dans l'expression <literal>WHERE</literal>. Le filtre de lignes
   autorise des expressions simples qui n'ont pas de fonctions définies par
   l'utilisateur, d'opérateurs définis par l'utilisateur, de types définis par
   l'utilisateur, de collations définis par l'utilisateur, de fonctions internes
   non immutables, ou de références à des colonnes systèmes.
  </para>

  <para>
   Pour les tables partitionnées publiées, le filtre de lignes pour que
   partition est pris de la table partitionnée publiée si le paramètre de
   publication <literal>publish_via_partition_root</literal> vaut true ou à
   partir de la partition elle-même s'il vaut false (valeur par défaut).  Voir
   <xref linkend="logical-replication-row-filter"/> pour les détails sur les
   filtres de lignes. De façon similaire, pour les tables partitionnées
   publiées, la liste de colonnes pour chaque partition est prise de la table
   partitionnée publiée si le paramètre de publication
   <literal>publish_via_partition_root</literal> vaut true, ou à partir de la
   partition elle-même si le paramètre vaut false.
  </para>

  <para>
   Pour une commande <command>INSERT ... ON CONFLICT</command>, la publication
   publiera l'opération qui résulte réellement de la commande.  Ainsi, en
   fonction du résultat, cela pourrait être publiée comme un
   <command>INSERT</command> ou un <command>UPDATE</command>, ou cela pourrait
   ne pas être publié du tout.
  </para>

  <para>
   <command>ATTACH</command>-er une table dans un arbre de partition dont la
   racine est publiée en utilisant une publication ayant
   <literal>publish_via_partition_root</literal> configuré to
   <literal>true</literal> ne résulte pas en la réplication du contenu existant
   de la table.
  </para>

  <para>
   Les commandes <command>COPY ... FROM</command> sont publiées comme des
   opérations <command>INSERT</command>.
  </para>

  <para>
   Les opérations <acronym>DDL</acronym> ne sont pas publiées.
  </para>

  <para>
   L'expression de la clause <literal>WHERE</literal> est exécutée avec le rôle
   utilisé pour la connexion de réplication.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer une publication qui publie tous les changements sur deux tables :
   <programlisting>
CREATE PUBLICATION mypublication FOR TABLE users, departments;
   </programlisting>
  </para>

  <para>
   Créer une publication qui publie tous les changements des départements
   actifs&nbsp;:
<programlisting>
CREATE PUBLICATION active_departments FOR TABLE departments WHERE (active IS TRUE);
</programlisting>
  </para>

  <para>
   Créer une publication qui publie tous les changements sur toutes les tables :
   <programlisting>
CREATE PUBLICATION alltables FOR ALL TABLES;
   </programlisting>
  </para>

  <para>
   Créer une publication qui ne publie que les opérations
   d'<command>INSERT</command> sur une table :
   <programlisting>
CREATE PUBLICATION insert_only FOR TABLE mydata
    WITH (publish = 'insert');
</programlisting>
  </para>

  <para>
   Créer une publication qui publie tous les changements des tables
   <structname>users</structname>, <structname>departments</structname> et tous
   les changements pour toutes les tables présentes dans le schéma
   <structname>production</structname>&nbsp;:
<programlisting>
CREATE PUBLICATION production_publication FOR TABLE users, departments, ALL TABLES IN SCHEMA production;
</programlisting>
  </para>

  <para>
   Créer une publication qui publie tous les changements pour toutes les tables
   présentes dans les schémas <structname>marketing</structname> et
   <structname>sales</structname>&nbsp;:
<programlisting>
CREATE PUBLICATION sales_publication FOR ALL TABLES IN SCHEMA marketing, sales;
</programlisting></para>

  <para>
   Créer une publication qui publie tous les changements pour la table
   <structname>users</structname>, mais réplique uniquement les colonnes
   <structname>user_id</structname> et
   <structname>firstname</structname>&nbsp;:
<programlisting>
CREATE PUBLICATION users_filtered FOR TABLE users (user_id, firstname);
   </programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE PUBLICATION</command> est une extension
   <productname>PostgreSQL</productname> au langage SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterpublication"/></member>
   <member><xref linkend="sql-droppublication"/></member>
   <member><xref linkend="sql-createsubscription"/></member>
   <member><xref linkend="sql-altersubscription"/></member>
  </simplelist>
 </refsect1>
</refentry>
